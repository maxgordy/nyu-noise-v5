calls <- read.csv("311_Noise_Complaints.csv")
# Convert "Created.Date" to Date format and extract the year
calls <- calls %>%
mutate(Created.Date = as.Date(Created.Date, format = "%m/%d/%Y"),
Year = as.numeric(format(Created.Date, "%Y")))
# Specify the noise complaint types to keep
descriptors_to_keep <- c(
"Banging/Pounding", "Loud Music/Party", "Loud Talking", "Loud Television",
"Noise: Alarms", "Noise: Construction Before/After Hours (NM1)",
"Noise: Construction Equipment (NC1)", "Noise: Jack Hammering (NC2)",
"Noise: Loud Music/Daytime (Mark Date and Time) (NN1)",
"Noise: Loud Music/Nighttime(Mark Date and Time) (NP1)",
"People Created Noise"
)
#Filter the dataset by the complaint types
calls_filtered <- calls %>%
filter(Descriptor %in% descriptors_to_keep) %>%
filter(!is.na(Latitude) & !is.na(Longitude)) %>%  #count NAs
clean_names()
#convert to sf
calls_sf <- st_as_sf(calls_filtered, coords = c("longitude", "latitude"), crs = 4326)
# Define your point as an sf object
point <- st_as_sf(data.frame(id = 1,
lon = -73.9994136,
lat = 40.7253766),
coords = c("lon", "lat"), crs = 2263)
# point_proj <- st_transform(point, 2263)
buffer <- st_buffer(point, dist = .001) #distance in degrees
st_crs(calls_sf) == st_crs(buffer) #test crs
plot(st_geometry(buffer), col = "white", border = "blue")  # Plot buffer
plot(st_geometry(calls_sf), add = TRUE, col = "red")      # Add calls points
data_within_buffer <- st_join(calls_sf, buffer, join = st_within)
calls_sf <- st_as_sf(calls_filtered, coords = c("longitude", "latitude"), crs = 2263)
data_within_buffer <- st_join(calls_sf, buffer, join = st_within)
heatmap <- ggplot() +
geom_sf(data = buffer, fill = NA, color = "blue") +  # Buffer boundary
geom_sf(data = data_within_buffer, aes(color = "311 Calls"), alpha = 0.5, size = 0.5) +
scale_color_manual(values = "red") +
theme_minimal() +
labs(title = "311 Calls Heatmap (Transparency Effect)",
subtitle = "Within buffer",
color = NULL)
print(heatmap)
plot(st_geometry(buffer), col = "white", border = "blue")  # Plot buffer
plot(st_geometry(buffer), col = "white", border = "blue")  # Plot buffer
plot(st_geometry(calls_sf), add = TRUE, col = "red")      # Add calls points
buffer <- st_buffer(point, dist = .01) #distance in degrees
#Filter the dataset by the complaint types
calls_filtered <- calls %>%
filter(Descriptor %in% descriptors_to_keep) %>%
filter(!is.na(Latitude) & !is.na(Longitude)) %>%  #count NAs
clean_names()
#convert to sf
calls_sf <- st_as_sf(calls_filtered, coords = c("longitude", "latitude"), crs = 2263)
# allcallsmap <- ggplot() +
#   geom_sf(data = calls_sf, aes(color = "311 Calls"), alpha = 0.5, size = 0.5) +
#   scale_color_manual(values = "red") +
#   theme_minimal() +
#   labs(title = "311 Calls Heatmap (Transparency Effect)",
#        color = NULL)
#
# print(allcallsmap)
heatmap <- ggplot() +
geom_sf(data = buffer, fill = NA, color = "blue") +  # Buffer boundary
geom_sf(data = data_within_buffer, aes(color = "311 Calls"), alpha = 0.5, size = 0.5) +
scale_color_manual(values = "red") +
theme_minimal() +
labs(title = "311 Calls Heatmap (Transparency Effect)",
subtitle = "Within buffer",
color = NULL)
print(heatmap)
# View the result
plot(st_geometry(properties_sf_bbl), col = "purple")
# ---------------------------------------------------------------------------------------------------
#ignore if you use file from drive - THIS IS HOW TO GET TO SHAPEFILE I READ IN BELOW (we can avoid using entire mappluto file now)
# #mappluto shapefile
# mappluto <- st_read("nyc_mappluto_24v3_1_fgdb/MapPLUTO24v3_1.gdb")
#
# head(mappluto)
#
# mappluto_clean <- mappluto %>%
#   select(Address, APPBBL)
#
# #writing this to git for easier access - but it will be in drive and ignored on github
# st_write(mappluto_clean, "mappluto_bbl_address.geojson")
# ---------------------------------------------------------------------------------------------------
mappluto <- st_read("mappluto_bbl_address.geojson") #from google drive /PLUTO
#nyu landlord properties (justfix)
justfix_nyu_props <- read.csv("nyuprops_who_owns_what_export.csv") #from github or drive /justfix
# Filter the BBL polygons based on your property BBLs
properties_sf_bbl <- mappluto[mappluto$APPBBL %in% justfix_nyu_props$bbl, ]
# View the result
plot(st_geometry(properties_sf_bbl), col = "purple")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tidyverse)
library(janitor)
library(formattable)
library(sf)
library(ggplot2)
library(tmap)
#maybe unncessary if we can do this in QGIS but idk how
# Create a 100-foot buffer around the properties
buffer_100ft <- st_buffer(properties_sf, dist = 100) %>%
st_transform(crs = st_crs(properties_sf_bbl))
# Create a 100-foot buffer around the properties
buffer_100ft <- st_buffer(properties_sf_bbl, dist = 100) %>%
st_transform(crs = st_crs(properties_sf_bbl))
# Plot the result: Properties (purple points) and 100ft buffer (blue)
plot(st_geometry(buffer_100ft), border = "blue", main = "Properties and 100ft Buffer")
plot(st_geometry(properties_sf), add = TRUE, col = "purple", pch = 16)
# Plot the result: Properties (purple points) and 100ft buffer (blue)
plot(st_geometry(buffer_100ft), border = "blue", main = "Properties and 100ft Buffer")
plot(st_geometry(properties_sf_bbl), add = TRUE, col = "purple", pch = 16)
st_crs(calls_sf)
# Create the heatmap
heatmap <- ggplot() +
geom_sf(data = buffer, fill = NA, color = "blue") +
geom_sf(data = calls_sf, aes(color = "311 Calls"), alpha = 0.5, size = 0.5) +
geom_sf(data = properties_sf_bbl, aes(color = "NYU Properties"), alpha = 2, size = 2)  +
theme_minimal() +
labs(title = "311 Calls Heatmap (Transparency Effect)",
subtitle = "Within buffer",
color = NULL)
print(heatmap)
plot(st_geometry(buffer_100ft), border = "blue", main = "NYU Properties and 100ft Buffer")
plot(st_geometry(properties_sf_bbl), add = TRUE, col = "purple", pch = 16)
plot(st_geometry(calls_sf), add = TRUE, col = "lightblue", pch = 16)
heatmap <- ggplot() +
# geom_sf(data = buffer, fill = NA, color = "blue") +
geom_sf(data = calls_sf, aes(color = "311 Calls"), alpha = 0.5, size = 0.5)
print(heatmap)
st_crs(calls_sf)
calls_sf <- st_as_sf(calls_filtered, coords = c("longitude", "latitude"), remove = FALSE)
st_crs(calls_sf)
calls_sf <- st_as_sf(calls_filtered, coords = c("longitude", "latitude"), remove = FALSE)
st_crs(calls_sf)
calls_sf <- st_as_sf(calls_filtered, coords = c("longitude", "latitude"), remove = FALSE)
#convert to sf
calls_sf <- st_as_sf(calls_filtered, coords = c("longitude", "latitude"), remove = FALSE, crs = 2263)
calls_sf <- st_as_sf(calls_filtered, coords = c("longitude", "latitude"), remove = FALSE, crs = 4436)
#convert to sf
calls_sf <- st_as_sf(calls_filtered, coords = c("longitude", "latitude"), remove = FALSE, crs = 4326)
# Create a 100-foot buffer around the properties
st_transform(crs = st_crs(calls_sf, properties_sf_bbl))
# Create a 100-foot buffer around the properties
st_transform(calls_sfcrs = st_crs(properties_sf_bbl))
st_transform(calls_sf, crs = st_crs(properties_sf_bbl))
buffer_100ft
st_crs(properties_sf_bbl)
calls_sf <- st_as_sf(calls_filtered, coords = c("longitude", "latitude"), remove = FALSE, crs = 4326)
st_crs(calls_sf)
st_transform(calls_sf, crs = st_crs(properties_sf_bbl))
summary(calls_sf$longitude)  # Should be around -74 for NYC
summary(coordinates$latitude)   # Should be around 40.7 for NYC
summary(calls_sf$latitude)   # Should be around 40.7 for NYC
# Create the heatmap
heatmap <- ggplot() +
geom_sf(data = buffer, fill = NA, color = "blue") +
geom_sf(data = calls_sf, aes(color = "311 Calls"), alpha = 0.5, size = 0.5) +
geom_sf(data = properties_sf_bbl, aes(color = "NYU Properties"), alpha = 2, size = 2)  +
theme_minimal() +
labs(title = "311 Calls Heatmap (Transparency Effect)",
subtitle = "Within buffer",
color = NULL)
print(heatmap)
setwd("~/Desktop/GitHub/nyu-noise-v5")
heatmap <- ggplot() +
geom_sf(data = buffer, fill = NA, color = "blue") +
geom_sf(data = calls_sf, aes(color = "311 Calls"), alpha = 0.5, size = 0.5) +
geom_sf(data = properties_sf_bbl, aes(color = "NYU Properties"), alpha = 2, size = 2)  +
theme_minimal() +
labs(title = "311 Calls Heatmap (Transparency Effect)",
subtitle = "Within buffer",
color = NULL)
print(heatmap)
st_crs(properties_sf_bbl)
properties_sf_bbl$longitude
summary(properties_sf_bbl$longitude)  # Should be around -74 for NYC
# Extract coordinates (longitude and latitude)
coordinates <- st_coordinates(properties_sf_bbl)
# Add longitude (x) and latitude (y) to the dataset
properties_sf_bbl$longitude <- coordinates[, 1]  # x coordinate (longitude)
# Extract coordinates (longitude and latitude)
coordinates <- st_coordinates(properties_sf_bbl)
# Add longitude (x) and latitude (y) to the dataset
properties_sf_bbl$longitude <- coordinates[, 1]  # x coordinate (longitude)
coordinates <- st_coordinates(properties_sf_bbl)
coordinates <- st_coordinates(properties_sf_bbl)
properties_sf_bbl$longitude <- coordinates[, 1]  # x coordinate (longitude)
head(properties_sf_bbl)
st_crs(mappluto)
st_crs(properties_sf_bbl)
st_crs(properties_sf_bbl)
# Create the heatmap
heatmap <- ggplot() +
geom_sf(data = buffer, fill = NA, color = "blue") +
geom_sf(data = calls_sf, aes(color = "311 Calls"), alpha = 0.5, size = 0.5) +
geom_sf(data = properties_sf_bbl, aes(color = "NYU Properties"), alpha = 2, size = 2)  +
theme_minimal() +
labs(title = "311 Calls Heatmap (Transparency Effect)",
subtitle = "Within buffer",
color = NULL)
print(heatmap)
# Create the heatmap
heatmap <- ggplot() +
geom_sf(data = properties_sf_bbl, aes(color = "NYU Properties"), alpha = 2, size = 2)  +
theme_minimal() +
labs(title = "311 Calls Heatmap (Transparency Effect)",
subtitle = "Within buffer",
color = NULL)
print(heatmap)
st_crs(properties_sf_bbl)
st_transform(properties_sf_bbl, crs = 4326)
st_transform(properties_sf_bbl, crs = 2263)
# Create the heatmap
heatmap <- ggplot() +
geom_sf(data = properties_sf_bbl, aes(color = "NYU Properties"), alpha = 2, size = 2)  +
theme_minimal() +
labs(title = "311 Calls Heatmap (Transparency Effect)",
subtitle = "Within buffer",
color = NULL)
print(heatmap)
coordinates <- st_coordinates(properties_sf_bbl)
summary(properties_sf_bbl$longitude)  # Should be around -74 for NYC
properties_sf_bbl$longitude <- coordinates[, 1]  # x coordinate (longitude)
properties_sf_bbl_centroids <- st_centroid(properties_sf_bbl)
properties_sf_bbl_centroids$longitude <- coordinates[, 1]  # x coordinate (longitude)
properties_sf_bbl_centroids <- st_centroid(properties_sf_bbl)
properties_sf_bbl_centroids$longitude <- coordinates[, 1]  # x coordinate (longitude)
# Calculate centroids for each multipolygon
properties_sf_bbl_centroids <- st_centroid(properties_sf_bbl)
# Extract coordinates of the centroids
coordinates <- st_coordinates(properties_sf_bbl_centroids)
# Add longitude and latitude to the dataset
properties_sf_bbl_centroids$longitude <- coordinates[, 1]  # x coordinate (longitude)
properties_sf_bbl_centroids$latitude  <- coordinates[, 2]  # y coordinate (latitude)
# Check the updated dataset
head(properties_sf_bbl_centroids)
# Transform to EPSG:4326 (WGS84 - Latitude and Longitude)
properties_sf_bbl_wgs84 <- st_transform(properties_sf_bbl, crs = 4326)
# Extract the transformed coordinates (longitude and latitude)
coordinates <- st_coordinates(properties_sf_bbl_wgs84)
# Add longitude and latitude to the dataset
properties_sf_bbl_wgs84$longitude <- coordinates[, 1]  # x coordinate (longitude)
coordinates <- st_coordinates(properties_sf_bbl_wgs84)
# Add longitude and latitude to the dataset
properties_sf_bbl_wgs84$longitude <- coordinates[, 1]  # x coordinate (longitude)
st_transform(properties_sf_bbl, crs = 4463)
# Create the heatmap
heatmap <- ggplot() +
geom_sf(data = properties_sf_bbl, aes(color = "NYU Properties"), alpha = 2, size = 2)  +
theme_minimal() +
labs(title = "311 Calls Heatmap (Transparency Effect)",
subtitle = "Within buffer",
color = NULL)
print(heatmap)
st_transform(properties_sf_bbl, crs = 4463)
# Transform to EPSG:4326 (WGS84 - Latitude and Longitude)
properties_sf_bbl_wgs84 <- st_transform(properties_sf_bbl, crs = 4326)
# Extract the transformed coordinates (longitude and latitude)
coordinates <- st_coordinates(properties_sf_bbl_wgs84)
# Add longitude and latitude to the dataset
properties_sf_bbl_wgs84$longitude <- coordinates[, 1]  # x coordinate (longitude)
# Create the heatmap
heatmap <- ggplot() +
geom_sf(data = buffer, fill = NA, color = "blue") +
geom_sf(data = calls_sf, aes(color = "311 Calls"), alpha = 0.5, size = 0.5) +
geom_sf(data = properties_sf_bbl, aes(color = "NYU Properties"), alpha = 2, size = 2)  +
theme_minimal() +
labs(title = "311 Calls Heatmap (Transparency Effect)",
subtitle = "Within buffer",
color = NULL)
print(heatmap)
# Transform to EPSG:4326 (WGS84 - Latitude and Longitude)
properties_sf_bbl_wgs84 <- st_transform(properties_sf_bbl, crs = 4326)
# Extract the transformed coordinates (longitude and latitude)
coordinates <- st_coordinates(properties_sf_bbl_wgs84)
# Add longitude and latitude to the dataset
properties_sf_bbl_wgs84$longitude <- coordinates[, 1]  # x coordinate (longitude)
# Transform to EPSG:4326 (WGS84 - Latitude and Longitude)
properties_sf_bbl_wgs84 <- st_transform(properties_sf_bbl, crs = 2236)
# Extract the transformed coordinates (longitude and latitude)
coordinates <- st_coordinates(properties_sf_bbl_wgs84)
# Add longitude and latitude to the dataset
properties_sf_bbl_wgs84$longitude <- coordinates[, 1]  # x coordinate (longitude)
# Calculate centroids for each multipolygon
properties_sf_bbl_centroids <- st_centroid(properties_sf_bbl)
# Transform the centroids to WGS84 (EPSG:4326)
properties_sf_bbl_centroids_wgs84 <- st_transform(properties_sf_bbl_centroids, crs = 4326)
# Extract the transformed coordinates (longitude and latitude)
coordinates <- st_coordinates(properties_sf_bbl_centroids_wgs84)
# Add longitude and latitude to the centroid dataset
properties_sf_bbl_centroids_wgs84$longitude <- coordinates[, 1]  # x coordinate (longitude)
properties_sf_bbl_centroids_wgs84$latitude  <- coordinates[, 2]  # y coordinate (latitude)
# Check the updated dataset
head(properties_sf_bbl_centroids_wgs84)
properties_sf_bbl <- st_set_crs(properties_sf_bbl, 2263)
# Calculate centroids for each multipolygon
properties_sf_bbl_centroids <- st_centroid(properties_sf_bbl)
# Transform the centroids to WGS84 (EPSG:4326)
properties_sf_bbl_centroids_wgs84 <- st_transform(properties_sf_bbl_centroids, crs = 2263)
# Extract the transformed coordinates (longitude and latitude)
coordinates <- st_coordinates(properties_sf_bbl_centroids_wgs84)
# Add longitude and latitude to the centroid dataset
properties_sf_bbl_centroids_wgs84$longitude <- coordinates[, 1]  # x coordinate (longitude)
properties_sf_bbl_centroids_wgs84$latitude  <- coordinates[, 2]  # y coordinate (latitude)
# Check the updated dataset
head(properties_sf_bbl_centroids_wgs84)
# Create the heatmap
heatmap <- ggplot() +
geom_sf(data = buffer, fill = NA, color = "blue") +
geom_sf(data = calls_sf, aes(color = "311 Calls"), alpha = 0.5, size = 0.5) +
geom_sf(data = properties_sf_bbl, aes(color = "NYU Properties"), alpha = 2, size = 2)  +
theme_minimal() +
labs(title = "311 Calls Heatmap (Transparency Effect)",
subtitle = "Within buffer",
color = NULL)
print(heatmap)
st_crs(properties_sf_bbl)
st_crs(calls_sf)
st_set_crs(calls_sf, st_crs(properties_sf_bbl))
# Create the heatmap
heatmap <- ggplot() +
geom_sf(data = buffer, fill = NA, color = "blue") +
geom_sf(data = calls_sf, aes(color = "311 Calls"), alpha = 0.5, size = 0.5) +
geom_sf(data = properties_sf_bbl, aes(color = "NYU Properties"), alpha = 2, size = 2)  +
theme_minimal() +
labs(title = "311 Calls Heatmap (Transparency Effect)",
subtitle = "Within buffer",
color = NULL)
print(heatmap)
calls_and_props <- st_join(calls_sf, properties_sf_bbl)
st_set_crs(calls_sf, st_crs(properties_sf_bbl))
st_set_crs(calls_sf, st_crs(properties_sf_bbl))
calls_and_props <- st_join(calls_sf, properties_sf_bbl)
st_crs(properties_sf_bbl)
st_crs(properties_sf_bbl)
calls_and_props <- st_join(calls_sf, properties_sf_bbl)
st_crs(calls_sf)
st_crs(properties_sf_bbl)
st_set_crs(calls_sf, crs = st_crs(properties_sf_bbl))
st_set_crs(calls_sf, crs = 2263)
calls_sf <- st_transform(calls_sf, crs = st_crs(properties_sf_bbl))
summary(calls_sf$longitude)  # Should be around -74 for NYC
summary(calls_sf$latitude)
heatmap <- ggplot() +
geom_sf(data = buffer, fill = NA, color = "blue") +
geom_sf(data = calls_sf, aes(color = "311 Calls"), alpha = 0.5, size = 0.5) +
geom_sf(data = properties_sf_bbl, aes(color = "NYU Properties"), alpha = 2, size = 2)  +
theme_minimal() +
labs(title = "311 Calls Heatmap (Transparency Effect)",
subtitle = "Within buffer",
color = NULL)
print(heatmap)
```
summary(calls_sf$longitude)  # Should be around -74 for NYC
summary(calls_sf$latitude)
st_crs(properties_sf_bbl)
st_crs(calls_sf)
calls_and_props <- st_join(calls_sf, properties_sf_bbl)
plot(st_geometry(calls_and_props))
# Create the heatmap
heatmap <- ggplot() +
geom_sf(data = buffer, fill = NA, color = "blue") +
geom_sf(data = calls_sf, aes(color = "311 Calls"), alpha = 0.5, size = 0.5) +
geom_sf(data = properties_sf_bbl, aes(color = "NYU Properties"), alpha = 2, size = 2)  +
theme_minimal() +
labs(title = "311 Calls Heatmap (Transparency Effect)",
subtitle = "Within buffer",
color = NULL)
# Create the heatmap
heatmap <- ggplot() +
geom_sf(data = buffer_100ft, fill = NA, color = "blue") +
geom_sf(data = calls_sf, aes(color = "311 Calls"), alpha = 0.5, size = 0.5) +
geom_sf(data = properties_sf_bbl, aes(color = "NYU Properties"), alpha = 2, size = 2)  +
theme_minimal() +
labs(title = "311 Calls Heatmap (Transparency Effect)",
subtitle = "Within buffer",
color = NULL)
print(heatmap)
heatmap <- ggplot() +
# Plot 311 Calls with transparency (alpha)
geom_sf(data = calls_sf, aes(color = "311 Calls"), alpha = 0.5, size = 0.5) +
# Plot Buffer layer with transparent fill and blue outline
geom_sf(data = buffer_100ft, fill = NA, color = "blue", size = 1) +
# Plot properties with purple outline and no fill (transparent)
geom_sf(data = properties_sf_bbl, aes(color = "NYU Properties"), fill = NA, alpha = 1, size = 2) +
# Customize theme and labels
theme_minimal() +
labs(title = "311 Calls Heatmap (Transparency Effect)",
subtitle = "Within 100ft Buffer",
color = NULL) +
#Add a custom color palette for clarity
scale_color_manual(values = c("311 Calls" = "red", "NYU Properties" = "purple"))
print(heatmap)
# Create the heatmap
heatmap <- ggplot() +
# Plot 311 Calls with transparency (alpha)
geom_sf(data = calls_sf, aes(color = "311 Calls"), alpha = 0.5, size = 0.5) +
# Plot Buffer layer with light blue semi-transparent fill and no outline
geom_sf(data = buffer_100ft, fill = "lightblue", color = NA, alpha = 0.5) +
# Plot properties with purple outline and no fill (transparent)
geom_sf(data = properties_sf_bbl, aes(color = "NYU Properties"), fill = NA, alpha = 1, size = 2) +
# Customize theme and labels
theme_minimal() +
labs(title = "311 Calls Heatmap (Transparency Effect)",
subtitle = "Within 100ft Buffer",
color = NULL) +
#Add a custom color palette for clarity
scale_color_manual(values = c("311 Calls" = "red", "NYU Properties" = "purple", "100ft Buffer" = "lightblue"))
print(heatmap)
setwd("~/Desktop/GitHub/nyu-noise-v5")
# Create the heatmap
heatmap <- ggplot() +
# Plot 311 Calls with transparency (alpha)
geom_sf(data = calls_sf, aes(color = "311 Calls"), alpha = 0.5, size = 0.5) +
# Plot Buffer layer with light blue semi-transparent fill and no outline
geom_sf(data = buffer_100ft, fill = "lightblue", color = NA, alpha = 0.5) +
# Plot properties with purple outline and no fill (transparent)
geom_sf(data = properties_sf_bbl, aes(color = "NYU Properties"), fill = NA, alpha = 1, size = 2) +
# Customize theme and labels
theme_minimal() +
labs(title = "311 Calls Heatmap (Transparency Effect)",
subtitle = "Within 100ft Buffer",
color = NULL) +
#Add a custom color palette for clarity
scale_color_manual(values = c("311 Calls" = "red", "NYU Properties" = "purple", "100ft Buffer" = "lightblue"))
print(heatmap)
heatmap <- ggplot() +
# Plot 311 Calls with transparency (alpha)
geom_sf(data = calls_sf, aes(color = "311 Calls"), alpha = 0.5, size = 0.5) +
# Plot Buffer layer with light blue semi-transparent fill and no outline
geom_sf(data = buffer_100ft, fill = "lightblue", color = NA, alpha = 0.5) +
# Plot properties with purple outline and no fill (transparent)
geom_sf(data = properties_sf_bbl, aes(color = "NYU Properties"), fill = NA, alpha = 1, size = 2) +
# Customize theme and labels
theme_minimal() +
labs(title = "311 Calls Heatmap (Transparency Effect)",
subtitle = "Within 100ft Buffer",
color = NULL) +
#Add a custom color palette for clarity
scale_color_manual(values = c("311 Calls" = "red", "NYU Properties" = "purple", "100ft Buffer" = "lightblue"))
print(heatmap)
setwd("~/Desktop/GitHub/nyu-noise-v5")
# Create the heatmap
heatmap <- ggplot() +
# Plot 311 Calls with transparency (alpha)
geom_sf(data = calls_sf, aes(color = "311 Calls"), alpha = 0.5, size = 0.5) +
# Plot Buffer layer with light blue semi-transparent fill and no outline
geom_sf(data = buffer_100ft, fill = "lightblue", color = NA, alpha = 0.5) +
# Plot properties with purple outline and no fill (transparent)
geom_sf(data = properties_sf_bbl, aes(color = "NYU Properties"), fill = NA, alpha = 1, size = 2) +
# Customize theme and labels
theme_minimal() +
labs(title = "311 Calls Heatmap (Transparency Effect)",
subtitle = "Within 100ft Buffer",
color = NULL) +
#Add a custom color palette for clarity
scale_color_manual(values = c("311 Calls" = "red", "NYU Properties" = "purple", "100ft Buffer" = "lightblue"))
print(heatmap)
heatmap <- ggplot() +
# Plot 311 Calls with transparency (alpha)
geom_sf(data = calls_sf, aes(color = "311 Calls"), alpha = 0.5, size = 0.5) +
# Plot Buffer layer with light blue semi-transparent fill and no outline
geom_sf(data = buffer_100ft, fill = "lightblue", color = NA, alpha = 0.5) +
# Plot properties with purple outline and no fill (transparent)
geom_sf(data = properties_sf_bbl, aes(color = "NYU Properties"), fill = NA, alpha = 1, size = 2) +
# Customize theme and labels
theme_minimal() +
labs(title = "311 Calls Heatmap (Transparency Effect)",
subtitle = "Within 100ft Buffer",
color = NULL) +
#Add a custom color palette for clarity
scale_color_manual(values = c("311 Calls" = "red", "NYU Properties" = "purple", "100ft Buffer" = "lightblue"))
print(heatmap)
# Define your point as an sf object
point <- st_as_sf(data.frame(id = 1,
lon = -73.9994136,
lat = 40.7253766),
coords = c("lon", "lat"), crs = 2263)
# point_proj <- st_transform(point, 2263)
buffer <- st_buffer(point, dist = 100) #distance in degrees
st_crs(calls_sf) == st_crs(buffer) #test crs
plot(st_geometry(buffer), col = "white", border = "blue")  # Plot buffer
plot(st_geometry(calls_sf), add = TRUE, col = "red")      # Add calls points
data_within_buffer <- st_join(calls_sf, buffer, join = st_within)
heatmap <- ggplot() +
geom_sf(data = buffer, fill = NA, color = "blue") +  # Buffer boundary
geom_sf(data = data_within_buffer, aes(color = "311 Calls"), alpha = 0.5, size = 0.5) +
scale_color_manual(values = "red") +
theme_minimal() +
labs(title = "311 Calls Heatmap (Transparency Effect)",
subtitle = "Within buffer",
color = NULL)
print(heatmap)
point_proj <- st_transform(point, crs = 2263)
buffer <- st_buffer(point_proj, dist = 100)
st_crs(calls_sf) == st_crs(buffer) #test crs
plot(st_geometry(buffer), col = "white", border = "blue")  # Plot buffer
plot(st_geometry(calls_sf), add = TRUE, col = "red")      # Add calls points
data_within_buffer <- st_join(calls_sf, buffer, join = st_within)
data_within_buffer <- st_join(calls_sf, buffer, join = st_within)
heatmap <- ggplot() +
geom_sf(data = buffer, fill = NA, color = "blue") +  # Buffer boundary
geom_sf(data = data_within_buffer, aes(color = "311 Calls"), alpha = 0.5, size = 0.5) +
scale_color_manual(values = "red") +
theme_minimal() +
labs(title = "311 Calls Heatmap (Transparency Effect)",
subtitle = "Within buffer",
color = NULL)
print(heatmap)
